# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  release:
    types: [created]

# on:
#   push:
#     branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    # runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - linux
          - darwin
        arch:
          - amd64
          - arm64
        # os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.x

    - name: Build Binary
      run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o g-${{ matrix.os }}-${{ matrix.arch }}
      # env:
      #   TARGET_OS: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: g-${{ matrix.os }}-${{ matrix.arch }}
        path: ./g-${{ matrix.os }}-${{ matrix.arch }}

    - name: Upload artifacts
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: |
          ./g-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: |
          g-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream 